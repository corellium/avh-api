"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _TextInput = _interopRequireDefault(require("./TextInput"));
var _TouchCurveInput = _interopRequireDefault(require("./TouchCurveInput"));
var _TouchInput = _interopRequireDefault(require("./TouchInput"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Arm API
 *    This documents the Arm Virtual Hosting REST API.  For other examples and API clients such as python or javascript please see [API Clients (python/javascript)](https://github.com/ARM-software/avh-api).   For a guide on using this interface please see [API Quickstart](https://intercom.help/arm-avh/en/articles/6134791-quickstart-for-the-api-docs)   ## Links   - [API Quickstart](https://intercom.help/arm-avh/en/articles/6134791-quickstart-for-the-api-docs)   - [API Clients (python/javascript)](https://github.com/arm-software/avh-api)   
 *
 * The version of the OpenAPI document: 3.15.0-15704
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The InstanceInput model module.
 * @module model/InstanceInput
 * @version 1.0.3
 */
var InstanceInput = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>InstanceInput</code>.
   * 
   * @alias module:model/InstanceInput
   * @implements module:model/TouchInput
   * @implements module:model/TouchCurveInput
   * @implements module:model/TextInput
   */
  function InstanceInput() {
    _classCallCheck(this, InstanceInput);
    _TouchInput["default"].initialize(this);
    _TouchCurveInput["default"].initialize(this);
    _TextInput["default"].initialize(this);
    InstanceInput.initialize(this);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  _createClass(InstanceInput, null, [{
    key: "initialize",
    value: function initialize(obj) {}

    /**
     * Constructs a <code>InstanceInput</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/InstanceInput} obj Optional instance to populate.
     * @return {module:model/InstanceInput} The populated <code>InstanceInput</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new InstanceInput();
        _TouchInput["default"].constructFromObject(data, obj);
        _TouchCurveInput["default"].constructFromObject(data, obj);
        _TextInput["default"].constructFromObject(data, obj);
        if (data.hasOwnProperty('position')) {
          obj['position'] = _ApiClient["default"].convertToType(data['position'], Object);
        }
        if (data.hasOwnProperty('start')) {
          obj['start'] = _ApiClient["default"].convertToType(data['start'], Object);
        }
        if (data.hasOwnProperty('end')) {
          obj['end'] = _ApiClient["default"].convertToType(data['end'], Object);
        }
        if (data.hasOwnProperty('text')) {
          obj['text'] = _ApiClient["default"].convertToType(data['text'], 'String');
        }
      }
      return obj;
    }
  }]);
  return InstanceInput;
}();
/**
 * Finger Positions
 * @member {Object} position
 */
InstanceInput.prototype['position'] = undefined;

/**
 * Finger Positions
 * @member {Object} start
 */
InstanceInput.prototype['start'] = undefined;

/**
 * Finger Positions
 * @member {Object} end
 */
InstanceInput.prototype['end'] = undefined;

/**
 * text to type
 * @member {String} text
 */
InstanceInput.prototype['text'] = undefined;

// Implement TouchInput interface:
/**
 * Finger Positions
 * @member {Object} position
 */
_TouchInput["default"].prototype['position'] = undefined;
// Implement TouchCurveInput interface:
/**
 * Finger Positions
 * @member {Object} start
 */
_TouchCurveInput["default"].prototype['start'] = undefined;
/**
 * Finger Positions
 * @member {Object} end
 */
_TouchCurveInput["default"].prototype['end'] = undefined;
// Implement TextInput interface:
/**
 * text to type
 * @member {String} text
 */
_TextInput["default"].prototype['text'] = undefined;
var _default = InstanceInput;
exports["default"] = _default;